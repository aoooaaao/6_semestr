import random

def monte_carlo_circle(R, x0, y0, A, B, N):
    inside = 0
    estimates = []

    for _ in range(N):
        x = random.uniform(x0 - A / 2, x0 + A / 2)
        y = random.uniform(y0 - B / 2, y0 + B / 2)

        if (x - x0)**2 + (y - y0)**2 <= R**2:
            inside += 1

    circle_area_estimate = (inside / N) * A * B  
    return circle_area_estimate

def calculate_mat_and_dispersia(estimates):
    m = len(estimates)
    mat = sum(estimates) / m
    dispersia = sum((x - mat) ** 2 for x in estimates) / m
    return mat, dispersia

R = float(input("Введите радиус круга: "))
x0 = float(input("Введите координату X центра круга: "))
y0 = float(input("Введите координату Y центра круга: "))

A = float(input("Введите ширину прямоугольника: ")) 
B = float(input("Введите высоту прямоугольника: "))
N = int(input("Введите количество точек для оценки: "))

estimates = []
for _ in range(10):
   estimate = monte_carlo_circle(R, x0, y0, A, B, N)
   estimates.append(estimate)
   print(f"Оценка площади круга {_ + 1}: {estimate}")

expectation, dispersia = calculate_mat_and_dispersia(estimates)

print(f"Итоговая оценка площади круга: {estimates}")
print(f"Математическое ожидание: {expectation}")
print(f"Дисперсия: {dispersia}")
